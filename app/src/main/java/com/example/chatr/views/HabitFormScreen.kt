package com.example.chatr.views

import androidx.compose.foundation.layout.*
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Modifier
import androidx.compose.ui.text.font.FontFamily
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.unit.dp
import androidx.navigation.NavController
import com.example.chatr.model.Habit
import com.example.chatr.viewModels.HabitViewModel

@Composable
fun HabitFormScreen(
    navController: NavController,
    viewModel: HabitViewModel = androidx.lifecycle.viewmodel.compose.viewModel()
) {
    var name by remember { mutableStateOf("") }
    var description by remember { mutableStateOf("") }
    var targetCount by remember { mutableStateOf("1") }

    Column(
        modifier = Modifier
            .fillMaxSize()
            .padding(50.dp),
        verticalArrangement = Arrangement.spacedBy(20.dp)
    ) {
        Text(
            "New Habit",
            style = MaterialTheme.typography.headlineMedium,
            fontWeight = FontWeight.Bold,
            fontFamily = FontFamily.Monospace,
            modifier = Modifier.padding(top = 20.dp)
        )
        OutlinedTextField(
            value = name,
            onValueChange = { name = it },
            label = { Text("Name (required)") },
            modifier = Modifier.fillMaxWidth()
        )
        OutlinedTextField(
            value = description,
            onValueChange = { description = it },
            label = { Text("Description (required)") },
            modifier = Modifier.fillMaxWidth()
        )
        OutlinedTextField(
            value = targetCount,
            onValueChange = { targetCount = it },
            label = { Text("Daily Goal") },
            modifier = Modifier.fillMaxWidth()
        )

        Spacer(modifier = Modifier.height(20.dp))
        Row(
            modifier = Modifier.fillMaxWidth(),
            horizontalArrangement = Arrangement.SpaceEvenly
        ) {
            Button(
                onClick = {
                    if (name.isNotEmpty() && targetCount.isNotEmpty()) {
                        val habit = Habit(
                            id = "", // will be generated by the database
                            name = name,
                            description = description,
                            targetCount = targetCount.toInt()
                        )
                        viewModel.addHabit(habit)
                        navController.navigate("main")
                    }
                },
                modifier = Modifier.weight(1f)
            ) {
                Text("Save Habit!")
            }
            Spacer(modifier = Modifier.width(20.dp))
            Button(
                onClick = {
                    navController.navigate("main")
                },
                modifier = Modifier.weight(1f)
            ) {
                Text("Previous ...")
            }
        }
    }
}